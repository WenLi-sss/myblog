<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>JS笔记</title>
    <url>/2020/08/28/JS%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[]]></content>
      <tags>
        <tag>Javascripts</tag>
      </tags>
  </entry>
  <entry>
    <title>利用阿里云搭建HEXO博客</title>
    <url>/2020/08/27/%E6%90%AD%E5%BB%BAHEXO%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<a id="more"></a> 

<p>参考链接：<a href="https://blog.csdn.net/NoCortY/article/details/99631249">从零搭建Hexo博客并部署阿里云服务器</a></p>
<h3 id="some-tips"><a href="#some-tips" class="headerlink" title="some tips"></a>some tips</h3><h3 id="一、nginx服务器环境搭建，这里我们选择下载nginx安装包进行编译"><a href="#一、nginx服务器环境搭建，这里我们选择下载nginx安装包进行编译" class="headerlink" title="一、nginx服务器环境搭建，这里我们选择下载nginx安装包进行编译"></a>一、nginx服务器环境搭建，这里我们选择下载nginx安装包进行编译</h3><p>编译环境:Centos 7</p>
<h4 id="（一）-gcc安装"><a href="#（一）-gcc安装" class="headerlink" title="（一） gcc安装"></a>（一） gcc安装</h4><p>安装 nginx 需要先将官网下载的源码进行编译，编译依赖 gcc 环境</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install gcc-c++</span><br></pre></td></tr></table></figure>

<h4 id="（二）PCRE-pcre-devel安装"><a href="#（二）PCRE-pcre-devel安装" class="headerlink" title="（二）PCRE pcre-devel安装"></a>（二）PCRE pcre-devel安装</h4><p>PCRE(Perl Compatible Regular Expressions) 是一个Perl库，包括 perl 兼容的正则表达式库。nginx 的 http 模块使用 pcre 来解析正则表达式，所以需要在 linux 上安装 pcre 库，pcre-devel 是使用 pcre 开发的一个二次开发库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y pcre pcre-devel</span><br></pre></td></tr></table></figure>

<h4 id="（三）zlib安装"><a href="#（三）zlib安装" class="headerlink" title="（三）zlib安装"></a>（三）zlib安装</h4><p>zlib 库提供了很多种压缩和解压缩的方式， nginx 使用 zlib 对 http 包的内容进行 gzip ，所以需要在 Centos 上安装 zlib 库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y zlib zlib-devel</span><br></pre></td></tr></table></figure>

<h4 id="（四）OpenSSL安装"><a href="#（四）OpenSSL安装" class="headerlink" title="（四）OpenSSL安装"></a>（四）OpenSSL安装</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y openssl openssl-devel</span><br></pre></td></tr></table></figure>

<h4 id="（五）nginx安装配置"><a href="#（五）nginx安装配置" class="headerlink" title="（五）nginx安装配置"></a>（五）nginx安装配置</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget -c https:&#x2F;&#x2F;nginx.org&#x2F;download&#x2F;nginx-1.12.0.tar.gz</span><br><span class="line">tar -zxvf nginx-1.12.0.tar.gz</span><br><span class="line">cd nginx-1.12.0</span><br><span class="line">.&#x2F;configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<p>查找安装路径</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">whereis nginx</span><br></pre></td></tr></table></figure>

<p>启动和停止nginx</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin&#x2F;</span><br><span class="line">.&#x2F;nginx </span><br><span class="line">.&#x2F;nginx -s stop</span><br><span class="line">.&#x2F;nginx -s quit</span><br><span class="line">.&#x2F;nginx -s reload</span><br></pre></td></tr></table></figure>

<p>查询nginx进程</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ps aux|grep nginx</span><br></pre></td></tr></table></figure>

<p>添加环境变量</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;profile</span><br><span class="line">#在最后一行配置以下命令</span><br><span class="line">PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin</span><br><span class="line">export PATH</span><br><span class="line">#激活配置</span><br><span class="line">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure>

<h3 id="二、创建GIT仓库中需要更改的地方"><a href="#二、创建GIT仓库中需要更改的地方" class="headerlink" title="二、创建GIT仓库中需要更改的地方"></a>二、创建GIT仓库中需要更改的地方</h3><p>创建一个git的仓库，并且新建一个post-receive文件</p>
<p>输入文件更改为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#&#x2F;home&#x2F;www&#x2F;tmp&#x2F;blog为你的临时文件存放目录</span><br><span class="line">#&#x2F;home&#x2F;www&#x2F;website为你的博客储存仓库</span><br><span class="line">GIT_REPO&#x3D;&#x2F;home&#x2F;git&#x2F;blog.git</span><br><span class="line">TMP_GIT_CLONE&#x3D;&#x2F;home&#x2F;www&#x2F;tmp&#x2F;blog</span><br><span class="line">PUBLIC_WWW&#x3D;&#x2F;home&#x2F;www&#x2F;website</span><br><span class="line">rm -rf $&#123;TMP_GIT_CLONE&#125;</span><br><span class="line">git clone $GIT_REPO $TMP_GIT_CLONE</span><br><span class="line">rm -rf $&#123;PUBLIC_WWW&#125;</span><br><span class="line">cp -rf $&#123;TMP_GIT_CLONE&#125;  $&#123;PUBLIC_WWW&#125;</span><br><span class="line">#保存并退出授予该文件可执行权限</span><br><span class="line">chmod +x ~&#x2F;blog.git&#x2F;hooks&#x2F;post-receive</span><br></pre></td></tr></table></figure>

<p>最后在本地git推送</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm run deploy</span><br></pre></td></tr></table></figure>

<p>服务器端nginx重新加载</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure>

<!--more-->







]]></content>
      <tags>
        <tag>BLOG</tag>
      </tags>
  </entry>
</search>
